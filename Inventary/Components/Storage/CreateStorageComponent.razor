@using Entities
@using Business

<EditForm Model="oStorage">
	<div class="form-group">
		<label>Bodega:</label>
		<InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
			<option value="">Selecciones una bodega...</option>
			@foreach (var warehouse in warehouses)
			{
				<option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>
			}
		</InputSelect>
	</div>

	<div class="form-group">
		<label>Producto:</label>
		<InputSelect @bind-Value="oStorage.ProductId" class="form-control">
			<option value="">Seleccione una producto...</option>
			@foreach (var product in products)
			{
				<option value="@product.ProductId">@product.ProductName</option>
			}
		</InputSelect>
	</div>

	<input type="button" value="Almacenar produto" @onclick="SaveStorage" />
</EditForm>

<div class="text-center h4">
	@message
</div>

@code {
	StorageEntity oStorage = new StorageEntity();

	List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
	List<ProductEntity> products = new List<ProductEntity>();

	string message;

	protected override async Task OnInitializedAsync()
	{
		warehouses = B_Warehouse.WarehouseList();
		products = B_Product.ProductList();
	}

	private void SaveStorage()
	{
		oStorage.StorageId = $"{oStorage.WarehouseId}-{oStorage.ProductId}";

		if (!B_Storage.IsProductInWarehouse(oStorage.StorageId))
		{
			oStorage.LastUpdate = DateTime.Now;
			B_Storage.CreateStorage(oStorage);

			message = "Producto registrado";
		}
		else
		{
			message = "El producto ya existe en la bodega";
		}
	}
}
